[
{
  "code" : "public void actionPerformed(ActionEvent event) {String command = event.getActionCommand();if (command.equals(\"Calculate\")) {calculate();}if (command.equals(\"Clear\")) {clear();}if (command.equals(\"Swap\")) {swap();}}",
  "sbt" : "---\r\n(MethodDeclaration\r\n    (BlockStmt\r\n        (ExpressionStmt\r\n            (VariableDeclarationExpr\r\n                (VariableDeclarator\r\n                    (MethodCallExpr\r\n                        (SimpleName_\"getActionCommand\"\r\n                            (SimpleName_\"getActionCommand\"\r\n                        )MethodCallExpr\r\n                    (NameExpr\r\n                        (SimpleName_\"event\"\r\n                            (SimpleName_\"event\"\r\n                        )NameExpr\r\n                    )MethodCallExpr\r\n                    )VariableDeclarator\r\n                (SimpleName_\"command\"\r\n                    (SimpleName_\"command\"\r\n                )VariableDeclarator\r\n            (ClassOrInterfaceType\r\n                (SimpleName_\"String\"\r\n                    (SimpleName_\"String\"\r\n                )ClassOrInterfaceType\r\n            )VariableDeclarator)VariableDeclarationExpr_variable\r\n            )ExpressionStmt\r\n        (IfStmt\r\n            (MethodCallExpr\r\n                (SimpleName_\"equals\"\r\n                    (SimpleName_\"equals\"\r\n                )MethodCallExpr\r\n            (NameExpr\r\n                (SimpleName_\"command\"\r\n                    (SimpleName_\"command\"\r\n                )NameExpr\r\n            )MethodCallExpr\r\n        (StringLiteralExpr_\"Calculate\"\r\n            (StringLiteralExpr_\"Calculate\")MethodCallExpr_argument\r\n            )IfStmt\r\n        (BlockStmt\r\n            (ExpressionStmt\r\n                (MethodCallExpr\r\n                    (SimpleName_\"calculate\"\r\n                        (SimpleName_\"calculate\"\r\n                    )MethodCallExpr\r\n                )ExpressionStmt)BlockStmt_statement\r\n        )IfStmt\r\n        (IfStmt\r\n            (MethodCallExpr\r\n                (SimpleName_\"equals\"\r\n                    (SimpleName_\"equals\"\r\n                )MethodCallExpr\r\n            (NameExpr\r\n                (SimpleName_\"command\"\r\n                    (SimpleName_\"command\"\r\n                )NameExpr\r\n            )MethodCallExpr\r\n        (StringLiteralExpr_\"Clear\"\r\n            (StringLiteralExpr_\"Clear\")MethodCallExpr_argument\r\n            )IfStmt\r\n        (BlockStmt\r\n            (ExpressionStmt\r\n                (MethodCallExpr\r\n                    (SimpleName_\"clear\"\r\n                        (SimpleName_\"clear\"\r\n                    )MethodCallExpr\r\n                )ExpressionStmt)BlockStmt_statement\r\n        )IfStmt\r\n        (IfStmt\r\n            (MethodCallExpr\r\n                (SimpleName_\"equals\"\r\n                    (SimpleName_\"equals\"\r\n                )MethodCallExpr\r\n            (NameExpr\r\n                (SimpleName_\"command\"\r\n                    (SimpleName_\"command\"\r\n                )NameExpr\r\n            )MethodCallExpr\r\n        (StringLiteralExpr_\"Swap\"\r\n            (StringLiteralExpr_\"Swap\")MethodCallExpr_argument\r\n            )IfStmt\r\n        (BlockStmt\r\n            (ExpressionStmt\r\n                (MethodCallExpr\r\n                    (SimpleName_\"swap\"\r\n                        (SimpleName_\"swap\"\r\n                    )MethodCallExpr\r\n                )ExpressionStmt)BlockStmt_statement\r\n        )IfStmt)BlockStmt_statement\r\n    )MethodDeclaration\r\n(VoidType\r\n)MethodDeclaration\r\n(SimpleName_\"actionPerformed\"\r\n(SimpleName_\"actionPerformed\"\r\n)MethodDeclaration\r\n(Modifier_\"PUBLIC\"\r\n(Modifier_\"PUBLIC\")MethodDeclaration_modifier\r\n(Parameter_\"false\"\r\n(Parameter_\"false\"\r\n(SimpleName_\"event\"\r\n(SimpleName_\"event\"\r\n)Parameter\r\n(ClassOrInterfaceType\r\n(SimpleName_\"ActionEvent\"\r\n(SimpleName_\"ActionEvent\"\r\n)ClassOrInterfaceType\r\n)Parameter)MethodDeclaration_parameter\r\n..."
},
{
  "code" : "void clear() {oldSteps.setText(\"\");definedLength.setText(\"\");measuredLength.setText(\"\");newSteps.setText(\"\");}",
  "sbt" : "---\r\n(MethodDeclaration\r\n    (BlockStmt\r\n        (ExpressionStmt\r\n            (MethodCallExpr\r\n                (SimpleName_\"setText\"\r\n                    (SimpleName_\"setText\"\r\n                )MethodCallExpr\r\n            (NameExpr\r\n                (SimpleName_\"oldSteps\"\r\n                    (SimpleName_\"oldSteps\"\r\n                )NameExpr\r\n            )MethodCallExpr\r\n        (StringLiteralExpr_\"\"\r\n            (StringLiteralExpr_\"\")MethodCallExpr_argument\r\n            )ExpressionStmt\r\n        (ExpressionStmt\r\n            (MethodCallExpr\r\n                (SimpleName_\"setText\"\r\n                    (SimpleName_\"setText\"\r\n                )MethodCallExpr\r\n            (NameExpr\r\n                (SimpleName_\"definedLength\"\r\n                    (SimpleName_\"definedLength\"\r\n                )NameExpr\r\n            )MethodCallExpr\r\n        (StringLiteralExpr_\"\"\r\n            (StringLiteralExpr_\"\")MethodCallExpr_argument\r\n            )ExpressionStmt\r\n        (ExpressionStmt\r\n            (MethodCallExpr\r\n                (SimpleName_\"setText\"\r\n                    (SimpleName_\"setText\"\r\n                )MethodCallExpr\r\n            (NameExpr\r\n                (SimpleName_\"measuredLength\"\r\n                    (SimpleName_\"measuredLength\"\r\n                )NameExpr\r\n            )MethodCallExpr\r\n        (StringLiteralExpr_\"\"\r\n            (StringLiteralExpr_\"\")MethodCallExpr_argument\r\n            )ExpressionStmt\r\n        (ExpressionStmt\r\n            (MethodCallExpr\r\n                (SimpleName_\"setText\"\r\n                    (SimpleName_\"setText\"\r\n                )MethodCallExpr\r\n            (NameExpr\r\n                (SimpleName_\"newSteps\"\r\n                    (SimpleName_\"newSteps\"\r\n                )NameExpr\r\n            )MethodCallExpr\r\n        (StringLiteralExpr_\"\"\r\n            (StringLiteralExpr_\"\")MethodCallExpr_argument\r\n            )ExpressionStmt)BlockStmt_statement\r\n    )MethodDeclaration\r\n(VoidType\r\n)MethodDeclaration\r\n(SimpleName_\"clear\"\r\n(SimpleName_\"clear\"\r\n)MethodDeclaration\r\n..."
},
{
  "code" : "void calculate() {float oldStepsValue = Float.parseFloat(oldSteps.getText());float definedLengthValue = Float.parseFloat(definedLength.getText());float measuredLengthValue = Float.parseFloat(measuredLength.getText());float newStepsValue = ((oldStepsValue * definedLengthValue) / measuredLengthValue);String newStepsValueString;newStepsValueString = String.valueOf(newStepsValue);newSteps.setText(newStepsValueString);}",
  "sbt" : "---\r\n(MethodDeclaration\r\n    (BlockStmt\r\n        (ExpressionStmt\r\n            (VariableDeclarationExpr\r\n                (VariableDeclarator\r\n                    (MethodCallExpr\r\n                        (SimpleName_\"parseFloat\"\r\n                            (SimpleName_\"parseFloat\"\r\n                        )MethodCallExpr\r\n                    (NameExpr\r\n                        (SimpleName_\"Float\"\r\n                            (SimpleName_\"Float\"\r\n                        )NameExpr\r\n                    )MethodCallExpr\r\n                (MethodCallExpr\r\n                    (SimpleName_\"getText\"\r\n                        (SimpleName_\"getText\"\r\n                    )MethodCallExpr\r\n                (NameExpr\r\n                    (SimpleName_\"oldSteps\"\r\n                        (SimpleName_\"oldSteps\"\r\n                    )NameExpr\r\n                )MethodCallExpr)MethodCallExpr_argument\r\n                    )VariableDeclarator\r\n                (SimpleName_\"oldStepsValue\"\r\n                    (SimpleName_\"oldStepsValue\"\r\n                )VariableDeclarator\r\n            (PrimitiveType_\"FLOAT\"\r\n                (PrimitiveType_\"FLOAT\"\r\n            )VariableDeclarator)VariableDeclarationExpr_variable\r\n   